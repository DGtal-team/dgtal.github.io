<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 11.0.0 (20240428.1522)
 -->
<!-- Title: DGtal::concepts::CPositiveIrreducibleFraction&lt; T &gt; Pages: 1 -->
<svg width="370pt" height="187pt"
 viewBox="0.00 0.00 370.00 186.88" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 182.88)">
<title>DGtal::concepts::CPositiveIrreducibleFraction&lt; T &gt;</title>
<!-- Node1 -->
<g id="Node000001" class="node">
<title>Node1</title>
<g id="a_Node000001"><a xlink:title="Aim: Defines positive irreducible fractions, i.e. fraction p/q, p and q non&#45;negative integers,...">
<polygon fill="#999999" stroke="#666666" points="362,-110.5 226,-110.5 226,-80 362,-80 362,-110.5"/>
<text text-anchor="start" x="234" y="-97" font-family="FreeSans" font-size="10.00">DGtal::concepts::CPositive</text>
<text text-anchor="middle" x="294" y="-85.75" font-family="FreeSans" font-size="10.00">IrreducibleFraction&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="Node000002" class="node">
<title>Node2</title>
<g id="a_Node000002"><a xlink:href="structboost_1_1CopyConstructible.html" target="_top" xlink:title="Go to http://www.sgi.com/tech/stl/CopyConstructible.html.">
<polygon fill="white" stroke="#666666" points="170.5,-178.88 19.5,-178.88 19.5,-159.62 170.5,-159.62 170.5,-178.88"/>
<text text-anchor="middle" x="95" y="-165.38" font-family="FreeSans" font-size="10.00">boost::CopyConstructible&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1_Node000001_Node000002" class="edge">
<title>Node2&#45;&gt;Node1</title>
<g id="a_edge1_Node000001_Node000002"><a xlink:title=" ">
<path fill="none" stroke="#63b8ff" d="M173.56,-156.39C179.18,-154.85 184.71,-153.14 190,-151.25 218.75,-140.96 249.17,-123.51 269.43,-110.81"/>
<polygon fill="#63b8ff" stroke="#63b8ff" points="172.99,-152.92 164.15,-158.77 174.7,-159.71 172.99,-152.92"/>
</a>
</g>
</g>
<!-- Node3 -->
<g id="Node000003" class="node">
<title>Node3</title>
<g id="a_Node000003"><a xlink:href="structboost_1_1DefaultConstructible.html" target="_top" xlink:title="Go to http://www.sgi.com/tech/stl/DefaultConstructible.html.">
<polygon fill="white" stroke="#666666" points="174.62,-141.88 15.38,-141.88 15.38,-122.62 174.62,-122.62 174.62,-141.88"/>
<text text-anchor="middle" x="95" y="-128.38" font-family="FreeSans" font-size="10.00">boost::DefaultConstructible&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2_Node000001_Node000003" class="edge">
<title>Node3&#45;&gt;Node1</title>
<g id="a_edge2_Node000001_Node000003"><a xlink:title=" ">
<path fill="none" stroke="#63b8ff" d="M161.12,-120.02C181.9,-116.12 204.93,-111.79 225.86,-107.86"/>
<polygon fill="#63b8ff" stroke="#63b8ff" points="160.5,-116.57 151.32,-121.86 161.79,-123.45 160.5,-116.57"/>
</a>
</g>
</g>
<!-- Node4 -->
<g id="Node000004" class="node">
<title>Node4</title>
<g id="a_Node000004"><a xlink:href="structboost_1_1Assignable.html" target="_top" xlink:title="Go to http://www.sgi.com/tech/stl/Assignable.html.">
<polygon fill="white" stroke="#666666" points="154,-104.88 36,-104.88 36,-85.62 154,-85.62 154,-104.88"/>
<text text-anchor="middle" x="95" y="-91.38" font-family="FreeSans" font-size="10.00">boost::Assignable&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node1 -->
<g id="edge3_Node000001_Node000004" class="edge">
<title>Node4&#45;&gt;Node1</title>
<g id="a_edge3_Node000001_Node000004"><a xlink:title=" ">
<path fill="none" stroke="#63b8ff" d="M165.61,-95.25C185.18,-95.25 206.41,-95.25 225.84,-95.25"/>
<polygon fill="#63b8ff" stroke="#63b8ff" points="165.82,-91.75 155.82,-95.25 165.82,-98.75 165.82,-91.75"/>
</a>
</g>
</g>
<!-- Node5 -->
<g id="Node000005" class="node">
<title>Node5</title>
<g id="a_Node000005"><a xlink:href="structDGtal_1_1concepts_1_1CBackInsertable.html" target="_top" xlink:title="Aim: Represents types for which a std::back_insert_iterator can be constructed with std::back_inserte...">
<polygon fill="white" stroke="#666666" points="190,-67.88 0,-67.88 0,-48.62 190,-48.62 190,-67.88"/>
<text text-anchor="middle" x="95" y="-54.38" font-family="FreeSans" font-size="10.00">DGtal::concepts::CBackInsertable&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node1 -->
<g id="edge4_Node000001_Node000005" class="edge">
<title>Node5&#45;&gt;Node1</title>
<g id="a_edge4_Node000001_Node000005"><a xlink:title=" ">
<path fill="none" stroke="#63b8ff" d="M161.12,-70.48C181.9,-74.38 204.93,-78.71 225.86,-82.64"/>
<polygon fill="#63b8ff" stroke="#63b8ff" points="161.79,-67.05 151.32,-68.64 160.5,-73.93 161.79,-67.05"/>
</a>
</g>
</g>
<!-- Node6 -->
<g id="Node000006" class="node">
<title>Node6</title>
<g id="a_Node000006"><a xlink:href="structDGtal_1_1concepts_1_1CConstSinglePassRange.html" target="_top" xlink:title="Aim: Defines the concept describing a const single pass range.">
<polygon fill="white" stroke="#666666" points="172,-30.5 18,-30.5 18,0 172,0 172,-30.5"/>
<text text-anchor="start" x="26" y="-17" font-family="FreeSans" font-size="10.00">DGtal::concepts::CConstSingle</text>
<text text-anchor="middle" x="95" y="-5.75" font-family="FreeSans" font-size="10.00">PassRange&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node1 -->
<g id="edge5_Node000001_Node000006" class="edge">
<title>Node6&#45;&gt;Node1</title>
<g id="a_edge5_Node000001_Node000006"><a xlink:title=" ">
<path fill="none" stroke="#63b8ff" d="M176.5,-34.38C181.11,-35.91 185.63,-37.54 190,-39.25 218.04,-50.26 248.09,-67.25 268.44,-79.64"/>
<polygon fill="#63b8ff" stroke="#63b8ff" points="177.7,-31.08 167.11,-31.41 175.59,-37.76 177.7,-31.08"/>
</a>
</g>
</g>
</g>
</svg>
