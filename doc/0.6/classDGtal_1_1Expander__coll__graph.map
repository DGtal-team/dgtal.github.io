<map id="DGtal::Expander&lt; TObject &gt;" name="DGtal::Expander&lt; TObject &gt;">
<area shape="rect" id="node2" href="$classDGtal_1_1DigitalSetDomain.html" title="DGtal::DigitalSetDomain\l\&lt; DigitalSet \&gt;" alt="" coords="1085,4,1262,54"/>
<area shape="rect" id="node3" href="$classDGtal_1_1DigitalSetDomain.html" title="Aim: Constructs a domain limited to the given digital set." alt="" coords="599,4,777,54"/>
<area shape="rect" id="node4" href="$structDGtal_1_1NotPointPredicate.html" title="DGtal::NotPointPredicate\l\&lt; InCoreDomainPredicate \&gt;" alt="" coords="1072,78,1275,128"/>
<area shape="rect" id="node5" href="$structDGtal_1_1NotPointPredicate.html" title="Aim: The predicate returns true when the point predicate given at construction return false..." alt="" coords="598,78,778,128"/>
<area shape="rect" id="node6" href="$classDGtal_1_1DomainAdjacency.html" title="DGtal::DomainAdjacency\l\&lt; ObjectDomain, ForegroundAdjacency \&gt;" alt="" coords="1027,151,1319,201"/>
<area shape="rect" id="node7" href="$structDGtal_1_1DomainPredicate.html" title="DGtal::DomainPredicate\l\&lt; Domain \&gt;" alt="" coords="315,168,490,218"/>
<area shape="rect" id="node9" href="$classDGtal_1_1DomainAdjacency.html" title="Aim: Given a domain and an adjacency, limits the given adjacency to the specified domain for all adja..." alt="" coords="592,222,784,272"/>
<area shape="rect" id="node8" href="$structDGtal_1_1DomainPredicate.html" title="Aim: The predicate returning true iff the point is in the domain given at construction. It is just a wrapper class around the methods Domain::isInside( const Point &amp; ), where Domain stands for any model of CDomain." alt="" coords="6,168,181,218"/>
</map>
