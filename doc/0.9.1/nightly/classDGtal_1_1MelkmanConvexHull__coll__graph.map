<map id="DGtal::MelkmanConvexHull&lt; TPoint, TOrientationFunctor &gt;" name="DGtal::MelkmanConvexHull&lt; TPoint, TOrientationFunctor &gt;">
<area shape="rect" id="node4" href="$classDGtal_1_1PredicateFromOrientationFunctor2.html" title="DGtal::PredicateFromOrientation\lFunctor2\&lt; Functor, true, false \&gt;" alt="" coords="1137,139,1367,186"/>
<area shape="rect" id="node6" href="$classDGtal_1_1functors_1_1Thresholder.html" title="Aim: A small functor with an operator () that compares one value to a threshold value according to tw..." alt="" coords="351,203,551,250"/>
<area shape="rect" id="node18" href="$classDGtal_1_1PredicateFromOrientationFunctor2.html" title="Aim: Small adapter to models of COrientationFunctor2. It is a model of concepts::CPointPredicate. It is also a ternary predicate on points, useful for basic geometric tasks such as convex hull computation. " alt="" coords="701,164,931,228"/>
<area shape="rect" id="node21" href="$classDGtal_1_1PredicateFromOrientationFunctor2.html" title="DGtal::PredicateFromOrientation\lFunctor2\&lt; Functor, false, false \&gt;" alt="" coords="1137,209,1367,255"/>
<area shape="rect" id="node30" title="STL class. " alt="" coords="388,344,513,373"/>
<area shape="rect" id="node12" href="$classDGtal_1_1InHalfPlaneBySimple3x3Matrix.html" title="Aim: Class that implements an orientation functor, ie. it provides a way to compute the orientation o..." alt="" coords="707,5,925,51"/>
<area shape="rect" id="node14" href="$classDGtal_1_1SimpleMatrix.html" title="DGtal::SimpleMatrix\l\&lt; Integer, 3, 3 \&gt;" alt="" coords="376,5,525,51"/>
<area shape="rect" id="node16" href="$classDGtal_1_1SimpleMatrix.html" title="Aim: implements basic MxN Matrix services (M,N&gt;=1). " alt="" coords="5,5,189,51"/>
</map>
