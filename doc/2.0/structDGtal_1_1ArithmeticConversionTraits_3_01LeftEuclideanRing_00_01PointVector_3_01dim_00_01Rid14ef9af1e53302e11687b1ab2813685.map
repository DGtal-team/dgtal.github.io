<map id="DGtal::ArithmeticConversionTraits&lt; LeftEuclideanRing, PointVector&lt; dim, RightEuclideanRing, RightContainer &gt;, typename std::enable_if&lt; IsArithmeticConversionValid&lt; LeftEuclideanRing, RightEuclideanRing &gt;::value &amp;&amp;! IsAPointVector&lt; LeftEuclideanRing &gt;::value &gt;::type &gt;" name="DGtal::ArithmeticConversionTraits&lt; LeftEuclideanRing, PointVector&lt; dim, RightEuclideanRing, RightContainer &gt;, typename std::enable_if&lt; IsArithmeticConversionValid&lt; LeftEuclideanRing, RightEuclideanRing &gt;::value &amp;&amp;! IsAPointVector&lt; LeftEuclideanRing &gt;::value &gt;::type &gt;">
<area shape="rect" id="Node000001" title="Specialization of ArithmeticConversionTraits when right operand is a PointVector." alt="" coords="5,239,314,370"/>
<area shape="rect" id="Node000002" href="$structDGtal_1_1ArithmeticConversionTraits.html" title="Aim: Trait class to get result type of arithmetic binary operators between two given types." alt="" coords="65,5,254,46"/>
<area shape="poly" id="edge1_Node000001_Node000002" title=" " alt="" coords="162,62,162,238,157,238,157,62"/>
</map>
